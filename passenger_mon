#!/usr/bin/env ruby

require 'optparse'
require 'fileutils'

options = {}

op = OptionParser.new do |opts|
  opts.banner = 'Usage: passenger_mon [options]'

  opts.on("-i=SECONDS", "--interval=SECONDS", "Poll interval in seconds (default: 10)") do |interval|
    options[:interval] = interval
  end

  opts.on("-m=MEMORY", "--memory=MB", "Memory threshold in MB (default: 800)") do |mb|
    options[:threshold] = mb
  end

  opts.on_tail("-h", "--help", "show this message") do
    abort(opts.to_s)
  end
end.parse!

# set option defaults
options[:interval]  ||= 10
options[:threshold] ||= 800
options[:threshold] = options[:threshold].to_i

process_name = 'passenger_mon'
pidfile = "/tmp/#{process_name}.pid"

# remove the pidfile on shutdown
at_exit do
  $stdout.puts "Removing pidfile."
  FileUtils.rm(pidfile)
end

# write out the pidfile
File.open(pidfile, 'w') { |f| f.puts($$) }

require 'logger'
logger = Logger.new("/var/log/passenger_mon.log")
real_mem_threshold = 800

Signal.trap('INT') do
  logger.info "Shutting down now..."
  abort("\n")
end

loop do
  logger.info "Checking for naughty processes..."
  
  results = `passenger-memory-stats`
  results = results.split("\n").grep(/Rails/)

  results.each do |res|
    pid, vm_size, vm_size_label, mem_res, *bullshit = res.strip.split(/\s+/)
    if mem_res.to_i >= real_mem_threshold
      logger.info "Killing process #{pid} using #{mem_res.to_i}mb of ram (Threshold=#{real_mem_threshold}mb)"
      system("kill #{pid}")
    end
  end
  
  sleep 10
end
